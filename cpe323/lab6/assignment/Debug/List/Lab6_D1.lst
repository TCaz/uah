###############################################################################
#
# IAR C/C++ Compiler V6.10.2.50871/W32 for MSP430         30/Sep/2014  12:50:58
# Copyright 1996-2014 IAR Systems AB.
# Standalone license - IAR Embedded Workbench for Texas Instruments MSP430, 8K KickStart Edition 6.10
#
#    __rt_version  =  3
#    __double_size =  32
#    __reg_r4      =  free
#    __reg_r5      =  free
#    __pic         =  no
#    __core        =  430X
#    __data_model  =  small
#    __code_model  =  large
#    Source file   =  D:\uah\cpe323\lab6\demo\Lab6_D1.c
#    Command line  =  
#        D:\uah\cpe323\lab6\demo\Lab6_D1.c -lCN
#        D:\uah\cpe323\lab6\demo\Debug\List\ -o
#        D:\uah\cpe323\lab6\demo\Debug\Obj\ --no_cse --no_unroll --no_inline
#        --no_code_motion --no_tbaa --debug -D__MSP430FG4618__ -e --double=32
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\430\lib\dlib\dl430xlsfn.h" --core=430X --data_model=small -On
#        --multiplier=16 --segment __data16=DATA16 --segment __data20=DATA20
#        --code_model=large
#    List file     =  D:\uah\cpe323\lab6\demo\Debug\List\Lab6_D1.lst
#    Object file   =  D:\uah\cpe323\lab6\demo\Debug\Obj\Lab6_D1.r43
#
###############################################################################

D:\uah\cpe323\lab6\demo\Lab6_D1.c
      1          /*****************************************************************************
      2          ;   TI Experimenter board demo, blinking leds LED1 and LED2 (msp430FG4618)
      3          ;
      4          ;   Description: Toggle P2.1 and P2.2 by xoring P2.1 and P2.2 inside a loop. 
      5          ;                The leds are connected to P2.1 and P2.2 and are on when
      6          ;                P2.1=1 and P2.2=1; 
      7          ;                The LEDs are initialized P2.1 to be off, and P2.2 to be on;
      8          ;                ACLK = 32.768kHz, MCLK = SMCLK = default DCO
      9          ;
     10          ;                 MSP430xG461x
     11          ;             -----------------
     12          ;         /|\|                 |
     13          ;          | |                 |
     14          ;          --|RST              |
     15          ;            |             P2.2|-->LED1(GREEN)
     16          ;            |             P2.1|-->LED2(YELLOW)
     17          ;
     18          ;   Alex Milenkovich, milenkovic@computer.org
     19          ;***************************************************************************/
     20          #include  <msp430xG46x.h>

   \                                 In  segment DATA16_AN, at 0x29
   \   unsigned char volatile P2OUT
   \                     P2OUT:
   \   000000                DS8 1

   \                                 In  segment DATA16_AN, at 0x2a
   \   unsigned char volatile P2DIR
   \                     P2DIR:
   \   000000                DS8 1

   \                                 In  segment DATA16_AN, at 0x120
   \   unsigned short volatile WDTCTL
   \                     WDTCTL:
   \   000000                DS8 2

   \                                 In  segment CODE, align 2
     21          void main(void) 
   \                     main:
     22          { 
     23             WDTCTL = WDTPW + WDTHOLD;// Stop watchdog timer 
   \   000000   B240805A2001 MOV.W   #0x5a80, &0x120
     24             P2DIR |= 0x06; 		    // Set P2.1 and P2.2 to output direction (0000_0110) 
   \   000006   F2D006002A00 BIS.B   #0x6, &0x2a
     25             P2OUT = 0x02; 			// Set P2OUT to 0000_0010b (LED2 is ON, LED1 is OFF)
   \   00000C   E2432900     MOV.B   #0x2, &0x29
     26               for (;;) { 
     27               unsigned int i; 
     28               P2OUT ^= 0x06; 		// Toggle P2.1 and P2.2 using exclusive-OR 
   \                     ??main_1:
   \   000010   F2E006002900 XOR.B   #0x6, &0x29
     29               i = 50000; 		    // Delay 
   \   000016   3F4050C3     MOV.W   #0xc350, R15
     30               do (i--); 
   \                     ??main_0:
   \   00001A   3F53         ADD.W   #0xffff, R15
     31               while (i != 0); 
   \   00001C   0F93         CMP.W   #0x0, R15
   \   00001E   FD23         JNE     ??main_0
   \   000020   F73F         JMP     ??main_1
   \   000022                REQUIRE WDTCTL
   \   000022                REQUIRE P2DIR
   \   000022                REQUIRE P2OUT
     32             } 
     33          }

   Maximum stack usage in bytes:

   CSTACK Function
   ------ --------
      4   main


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
       1  P2DIR
       1  P2OUT
       2  WDTCTL
      34  main

 
 34 bytes in segment CODE
  4 bytes in segment DATA16_AN
 
 34 bytes of CODE memory
  0 bytes of DATA memory (+ 4 bytes shared)

Errors: none
Warnings: none
